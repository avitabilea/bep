year = as.numeric(gsub("post:relevel\\(as.factor\\(school_year\\), 5\\)", "", term)),
lower_ci = estimate - 1.96 * std.error,
upper_ci = estimate + 1.96 * std.error
)
# Create the plot
ggplot(results, aes(x = year, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
labs(
x = "Years Relative to Event",
y = "Coefficient Estimate",
title = "Event Study: Effect on Certification",
caption = "95% Confidence Intervals shown"
) +
theme_minimal() +
scale_x_continuous(breaks = c(2012:2021), minor_breaks = c())
# Number of traditional Bilingual Educator certificates by BEP participation and year
prog_level_data %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = sum(trad_bl)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 2000), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
View(prog_level_data)
test <- filter(prog_level_data, school_year <= 2014, BEP == "Non-BEP")
View(test)
test <- filter(prog_level_data, school_year <= 2014, BEP == "Non-BEP") %>%
select(epp, school_year, trad_bl, bl , tot)
test <- filter(prog_level_data, school_year <= 2014, BEP == "Non-BEP") %>%
select(epp, school_year, trad_bl, bl)
View(test)
prog_level_data %>%
filter(epp != "Texas State University") %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = sum(trad_bl)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 2000), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
prog_level_data %>%
filter(epp != "Texas State University") %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = sum(trad_bl)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 2000), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
# Why is there a massive drop in traditional Bilingual Educator certificates from 2013 to 2014?
test <- filter(prog_level_data, school_year <= 2014, BEP == "Non-BEP") %>%
select(epp, school_year, trad_bl, bl)
# Number of traditional Bilingual Educator certificates by year
prog_level_data %>%
group_by(school_year) %>%
summarise(trad_bl = sum(trad_bl)) %>%
ggplot(aes(x=school_year, y=trad_bl)) +
geom_line() +
theme_minimal() +
scale_y_continuous(limits = c(0, 2500), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
#Event study----
# Run the event study
model <- feols(fml = trad_bl ~ post*relevel(as.factor(school_year), 5) | as.factor(epp),
data = prog_level_data,
cluster = prog_level_data$epp)
summary(model)
# Tidy the results - keeping just the interaction terms
results <- tidy(model) %>%
filter(grepl("post:relevel\\(as.factor\\(school_year\\), 5", term)) %>%
mutate(
year = as.numeric(gsub("post:relevel\\(as.factor\\(school_year\\), 5\\)", "", term)),
lower_ci = estimate - 1.96 * std.error,
upper_ci = estimate + 1.96 * std.error
)
# Create the plot
ggplot(results, aes(x = year, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
labs(
x = "Years Relative to Event",
y = "Coefficient Estimate",
title = "Event Study: Effect on Certification",
caption = "95% Confidence Intervals shown"
) +
theme_minimal() +
scale_x_continuous(breaks = c(2012:2021), minor_breaks = c())
prog_level_data %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = sum(trad_bl)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 2000), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
# Why is there a massive drop in traditional Bilingual Educator certificates from 2013 to 2014?
test <- filter(prog_level_data, school_year <= 2014, BEP == "Non-BEP") %>%
select(epp, school_year, trad_bl, bl)
# Number of traditional Bilingual Educator certificates by year
prog_level_data %>%
group_by(school_year) %>%
summarise(trad_bl = sum(trad_bl)) %>%
ggplot(aes(x=school_year, y=trad_bl)) +
geom_line() +
theme_minimal() +
scale_y_continuous(limits = c(0, 2500), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
#Event study----
# Run the event study
model <- feols(fml = trad_bl ~ post*relevel(as.factor(school_year), 5) | as.factor(epp),
data = prog_level_data,
cluster = prog_level_data$epp)
summary(model)
# Tidy the results - keeping just the interaction terms
results <- tidy(model) %>%
filter(grepl("post:relevel\\(as.factor\\(school_year\\), 5", term)) %>%
mutate(
year = as.numeric(gsub("post:relevel\\(as.factor\\(school_year\\), 5\\)", "", term)),
lower_ci = estimate - 1.96 * std.error,
upper_ci = estimate + 1.96 * std.error
)
# Create the plot
ggplot(results, aes(x = year, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
labs(
x = "Years Relative to Event",
y = "Coefficient Estimate",
title = "Event Study: Effect on Certification",
caption = "95% Confidence Intervals shown"
) +
theme_minimal() +
scale_x_continuous(breaks = c(2012:2021), minor_breaks = c())
test <- prog_level_data %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = sum(trad_bl))
View(test)
test <- prog_level_data %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = sum(trad_bl), n())
View(test)
prog_level_data %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl_prop)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 2000), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
prog_level_data %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl_prop)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()
View(prog_level_data)
prog_level_data %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()
View(raw)
View(prog_level_data)
prog_level_data %>%
filter(bl>10) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()
View(prog_level_data)
prog_level_data %>%
filter(bl>10) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl_prop, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()
prog_level_data %>%
# filter(bl>10) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl_prop, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()
model <- feols(fml = trad_bl_prop ~ post*relevel(as.factor(school_year), 5) | as.factor(epp),
data = prog_level_data,
cluster = prog_level_data$epp)
summary(model)
# Tidy the results - keeping just the interaction terms
results <- tidy(model) %>%
filter(grepl("post:relevel\\(as.factor\\(school_year\\), 5", term)) %>%
mutate(
year = as.numeric(gsub("post:relevel\\(as.factor\\(school_year\\), 5\\)", "", term)),
lower_ci = estimate - 1.96 * std.error,
upper_ci = estimate + 1.96 * std.error
)
# Create the plot
ggplot(results, aes(x = year, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
labs(
x = "Years Relative to Event",
y = "Coefficient Estimate",
title = "Event Study: Effect on Certification",
caption = "95% Confidence Intervals shown"
) +
theme_minimal() +
scale_x_continuous(breaks = c(2012:2021), minor_breaks = c())
View(bilingual)
View(prog_level_data)
model <- feols(fml = trad_bl ~ post*relevel(as.factor(school_year), 5) | as.factor(epp),
data = filter(prog_level_data, trad_bl>0),
cluster = prog_level_data$epp)
model <- feols(fml = trad_bl ~ post*relevel(as.factor(school_year), 5) | as.factor(epp),
data = filter(prog_level_data, trad_bl>0))
summary(model)
# Tidy the results - keeping just the interaction terms
results <- tidy(model) %>%
filter(grepl("post:relevel\\(as.factor\\(school_year\\), 5", term)) %>%
mutate(
year = as.numeric(gsub("post:relevel\\(as.factor\\(school_year\\), 5\\)", "", term)),
lower_ci = estimate - 1.96 * std.error,
upper_ci = estimate + 1.96 * std.error
)
# Create the plot
ggplot(results, aes(x = year, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
labs(
x = "Years Relative to Event",
y = "Coefficient Estimate",
title = "Event Study: Effect on Certification",
caption = "95% Confidence Intervals shown"
) +
theme_minimal() +
scale_x_continuous(breaks = c(2012:2021), minor_breaks = c())
test <- filter(prog_level_data, trad_bl>0)
View(test)
table(test$school_year)
test <- filter(prog_level_data, trad_bl>0)
View(test)
model <- feols(fml = bl ~ post*relevel(as.factor(school_year), 5) | as.factor(epp),
data = filter(prog_level_data),
cluster = prog_level_data$epp)
summary(model)
# Tidy the results - keeping just the interaction terms
results <- tidy(model) %>%
filter(grepl("post:relevel\\(as.factor\\(school_year\\), 5", term)) %>%
mutate(
year = as.numeric(gsub("post:relevel\\(as.factor\\(school_year\\), 5\\)", "", term)),
lower_ci = estimate - 1.96 * std.error,
upper_ci = estimate + 1.96 * std.error
)
# Create the plot
ggplot(results, aes(x = year, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
labs(
x = "Years Relative to Event",
y = "Coefficient Estimate",
title = "Event Study: Effect on Certification",
caption = "95% Confidence Intervals shown"
) +
theme_minimal() +
scale_x_continuous(breaks = c(2012:2021), minor_breaks = c())
prog_level_data %>%
# filter(bl>10) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 2000), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
prog_level_data %>%
# filter(bl>10) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 150), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
model <- feols(fml = bl ~ post*relevel(as.factor(school_year), 3) | as.factor(epp),
data = filter(prog_level_data),
cluster = prog_level_data$epp)
summary(model)
# Tidy the results - keeping just the interaction terms
results <- tidy(model) %>%
filter(grepl("post:relevel\\(as.factor\\(school_year\\), 3", term)) %>%
mutate(
year = as.numeric(gsub("post:relevel\\(as.factor\\(school_year\\), 3\\)", "", term)),
lower_ci = estimate - 1.96 * std.error,
upper_ci = estimate + 1.96 * std.error
)
# Create the plot
ggplot(results, aes(x = year, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
labs(
x = "Years Relative to Event",
y = "Coefficient Estimate",
title = "Event Study: Effect on Certification",
caption = "95% Confidence Intervals shown"
) +
theme_minimal() +
scale_x_continuous(breaks = c(2012:2021), minor_breaks = c())
test <- filter(prog_level_data, trad_bl>0)
table(test$school_year)
# Run the event study
model <- feols(fml = bl ~ post*relevel(as.factor(school_year), 5) | as.factor(epp),
data = filter(prog_level_data),
cluster = prog_level_data$epp)
summary(model)
# Tidy the results - keeping just the interaction terms
results <- tidy(model) %>%
filter(grepl("post:relevel\\(as.factor\\(school_year\\), 5", term)) %>%
mutate(
year = as.numeric(gsub("post:relevel\\(as.factor\\(school_year\\), 5\\)", "", term)),
lower_ci = estimate - 1.96 * std.error,
upper_ci = estimate + 1.96 * std.error
)
# Create the plot
ggplot(results, aes(x = year, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
labs(
x = "Years Relative to Event",
y = "Coefficient Estimate",
title = "Event Study: Effect on Certification",
caption = "95% Confidence Intervals shown"
) +
theme_minimal() +
scale_x_continuous(breaks = c(2012:2021), minor_breaks = c())
test <- filter(prog_level_data, trad_bl>0)
table(test$school_year)
# Number of traditional Bilingual Educator certificates by BEP participation and year
prog_level_data %>%
# filter(bl>10) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 150), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
prog_level_data %>%
# filter(bl>10) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 100), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
prog_level_data %>%
filter(bl>10) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 100), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
prog_level_data %>%
filter(bl>0) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 100), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
model <- feols(fml = bl ~ post*relevel(as.factor(school_year), 5) | as.factor(epp),
data = filter(prog_level_data, trad_bl > 0))
summary(model)
# Tidy the results - keeping just the interaction terms
results <- tidy(model) %>%
filter(grepl("post:relevel\\(as.factor\\(school_year\\), 5", term)) %>%
mutate(
year = as.numeric(gsub("post:relevel\\(as.factor\\(school_year\\), 5\\)", "", term)),
lower_ci = estimate - 1.96 * std.error,
upper_ci = estimate + 1.96 * std.error
)
# Create the plot
ggplot(results, aes(x = year, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
labs(
x = "Years Relative to Event",
y = "Coefficient Estimate",
title = "Event Study: Effect on Certification",
caption = "95% Confidence Intervals shown"
) +
theme_minimal() +
scale_x_continuous(breaks = c(2012:2021), minor_breaks = c())
test <- filter(prog_level_data, trad_bl>0)
table(test$school_year)
prog_level_data %>%
filter(bl>0) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 100), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
prog_level_data %>%
filter(bl>0) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = mean(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 100), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
prog_level_data %>%
filter(bl>0) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = sum(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
scale_y_continuous(limits = c(0, 100), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
prog_level_data %>%
filter(bl>0) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = sum(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
# scale_y_continuous(limits = c(0, 100), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
prog_level_data %>%
filter(bl<=200) %>%
group_by(school_year, BEP) %>%
summarise(trad_bl = sum(trad_bl, na.rm = T)) %>%
ggplot(aes(x=school_year, y=trad_bl, color=BEP)) +
geom_line() +
theme_minimal()  +
# scale_y_continuous(limits = c(0, 100), expand = c(0, 10)) +
ylab("# of certifications") +
xlab("Year")
model <- feols(fml = bl ~ post*relevel(as.factor(school_year), 5) | as.factor(epp),
data = filter(prog_level_data, trad_bl <= 200))
summary(model)
# Tidy the results - keeping just the interaction terms
results <- tidy(model) %>%
filter(grepl("post:relevel\\(as.factor\\(school_year\\), 5", term)) %>%
mutate(
year = as.numeric(gsub("post:relevel\\(as.factor\\(school_year\\), 5\\)", "", term)),
lower_ci = estimate - 1.96 * std.error,
upper_ci = estimate + 1.96 * std.error
)
# Create the plot
ggplot(results, aes(x = year, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
labs(
x = "Years Relative to Event",
y = "Coefficient Estimate",
title = "Event Study: Effect on Certification",
caption = "95% Confidence Intervals shown"
) +
theme_minimal() +
scale_x_continuous(breaks = c(2012:2021), minor_breaks = c())
test <- filter(prog_level_data, trad_bl>0)
table(test$school_year)
View(prog_level_data)
haven::write_dta(prog_level_data, here("data", "cleaned", "tx_teacher_certs_by_program.dta"))
